# -*- coding: utf-8 -*-
"""Fine Tuning

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SdlDObW3IUgD-iUHfAufi8Rds1jdbUrl
"""

import os
import zipfile
from PIL import Image
import numpy as np
import tensorflow as tf
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Dense, GlobalAveragePooling2D


!wget --no-check-certificate \
    https://storage.googleapis.com/mledu-datasets/cats_and_dogs_filtered.zip \
    -O /tmp/cats_and_dogs_filtered.zip

local_zip = '/tmp/cats_and_dogs_filtered.zip'
zip_ref = zipfile.ZipFile(local_zip, 'r')
zip_ref.extractall('/tmp')
zip_ref.close()

base_dir = '/tmp/cats_and_dogs_filtered'
train_dir = os.path.join(base_dir, 'train')
validation_dir = os.path.join(base_dir, 'validation')


cats_dir = os.path.join(train_dir, "cats")
dogs_dir = os.path.join(train_dir, "dogs")

x_train, y_train = [], []

for i in range(999):
    if i % 2 == 0:
        img_path = os.path.join(cats_dir, os.listdir(cats_dir)[i])
        label = 1
    else:
        img_path = os.path.join(dogs_dir, os.listdir(dogs_dir)[i])
        label = 0


    im = Image.open(img_path).convert("RGB")
    im_resized = im.resize((150, 150))
    x_train.append(np.array(im_resized))
    y_train.append(label)


x_train = np.array(x_train) / 255.0
y_train = np.array(y_train)


pretrained_model = tf.keras.applications.ResNet50(
    include_top=False,
    input_shape=(150, 150, 3),
    pooling='avg',
    weights='imagenet'
)


x = pretrained_model.output
x = Dense(128, activation='relu')(x)
output = Dense(1, activation='sigmoid')(x)

model = Model(inputs=pretrained_model.input, outputs=output)


pretrained_model.trainable = False


model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])


history = model.fit(
    x_train, y_train,
    epochs=10,
    batch_size=32,
    validation_split=0.2
)